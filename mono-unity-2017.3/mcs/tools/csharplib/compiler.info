<?xml version="1.0"?>
<assemblies>
  <assembly name="Mono.CSharp" version="2.1.0.0">
    <attributes>
      <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
        <properties>
          <property name="WrapNonExceptionThrows" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyKeyFileAttribute">
        <properties>
          <property name="KeyFile" value="../class/mono.pub" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDelaySignAttribute">
        <properties>
          <property name="DelaySign" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDescriptionAttribute">
        <properties>
          <property name="Description" value="Mono C# Compiler with Generics" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyFileVersionAttribute">
        <properties>
          <property name="Version" value="2.0.50727.1433" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyConfigurationAttribute">
        <properties>
          <property name="Configuration" value="" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyCompanyAttribute">
        <properties>
          <property name="Company" value="Novell, Inc." />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyCopyrightAttribute">
        <properties>
          <property name="Copyright" value="2001 - 2008 Novell, Inc." />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyProductAttribute">
        <properties>
          <property name="Product" value="Mono C# Compiler" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyTitleAttribute">
        <properties>
          <property name="Title" value="Mono C# Compiler" />
        </properties>
      </attribute>
    </attributes>
    <namespaces>
      <namespace name="Mono.CSharp">
        <classes>
          <class name="Evaluator" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="2182">
                <parameters />
              </constructor>
            </constructors>
			<fields>
              <field name="MessageOutput" attrib="22" fieldtype="System.IO.TextWriter" />
			</fields>
            <properties>
              <property name="InteractiveBaseClass" attrib="0" ptype="System.Type" params="">
                <methods>
                  <method name="get_InteractiveBaseClass()" attrib="2198" static="true" returntype="System.Type">
                    <parameters />
                  </method>
                  <method name="set_InteractiveBaseClass(System.Type)" attrib="2198" static="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Type" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Compile(System.String, out Mono.CSharp.CompiledMethod&amp;)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                  <parameter name="compiled" position="1" attrib="2" type="Mono.CSharp.CompiledMethod&amp;" direction="out">
                    <attributes>
                      <attribute name="System.Runtime.InteropServices.OutAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Compile(System.String)" attrib="150" static="true" returntype="Mono.CSharp.CompiledMethod">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Evaluate(System.String, out System.Object&amp;, out System.Boolean&amp;)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                  <parameter name="result" position="1" attrib="2" type="System.Object&amp;" direction="out">
                    <attributes>
                      <attribute name="System.Runtime.InteropServices.OutAttribute" />
                    </attributes>
                  </parameter>
                  <parameter name="result_set" position="2" attrib="2" type="System.Boolean&amp;" direction="out">
                    <attributes>
                      <attribute name="System.Runtime.InteropServices.OutAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
              <method name="Evaluate(System.String)" attrib="150" static="true" returntype="System.Object">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetUsing()" attrib="150" static="true" returntype="System.String">
                <parameters />
              </method>
              <method name="GetVars()" attrib="150" static="true" returntype="System.String">
                <parameters />
              </method>
              <method name="Init(System.String[])" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="args" position="0" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="GetCompletions(System.String,out System.String&amp;)" attrib="150" static="true" returntype="System.String[]">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.String" />
                  <parameter name="prefix" position="1" attrib="2" type="System.String&amp;" direction="out"/>
                </parameters>
              </method>
              <method name="InitAndGetStartupFiles(System.String[])" attrib="150" static="true" returntype="System.String[]">
                <parameters>
                  <parameter name="args" position="0" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="Interrupt()" attrib="150" static="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="LoadAssembly(System.String)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="file" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ReferenceAssembly(System.Reflection.Assembly)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="System.Reflection.Assembly" />
                </parameters>
              </method>
              <method name="Run(System.String)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="statement" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="NoValueSet" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="2182">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
            </classes>
          </class>
          <class name="CompiledMethod" type="delegate" base="System.MulticastDelegate" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="2182">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Object&amp;, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="retvalue" position="0" attrib="0" type="System.Object&amp;" direction="ref" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.Object&amp;, System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="retvalue" position="0" attrib="0" type="System.Object&amp;" direction="ref" />
                  <parameter name="result" position="1" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Object&amp;)" attrib="454" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="retvalue" position="0" attrib="0" type="System.Object&amp;" direction="ref" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="InteractiveBase" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="ContinuationPrompt" attrib="22" fieldtype="System.String" />
              <field name="Error" attrib="22" fieldtype="System.IO.TextWriter" />
              <field name="Output" attrib="22" fieldtype="System.IO.TextWriter" />
              <field name="Prompt" attrib="22" fieldtype="System.String" />
	      <field name="QuitRequested" attrib="22" fieldtype="System.Boolean" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="2182">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="help" attrib="0" ptype="System.String" params="">
                <methods>
                  <method name="get_help()" attrib="2198" static="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="quit" attrib="0" ptype="System.Object" params="">
                <methods>
                  <method name="get_quit()" attrib="2198" static="true" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="LoadAssembly(System.String)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="assembly" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LoadPackage(System.String)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="pkg" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Describe(System.Object)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="ShowUsing()" attrib="150" static="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ShowVars()" attrib="150" static="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Time(Mono.CSharp.InteractiveBase+Simple)" attrib="150" static="true" returntype="System.TimeSpan">
                <parameters>
                  <parameter name="a" position="0" attrib="0" type="Mono.CSharp.InteractiveBase+Simple" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="Simple" type="delegate" base="System.MulticastDelegate" sealed="true" serializable="true" charset="Ansi" layout="Auto">
                <interfaces>
                  <interface name="System.ICloneable" />
                  <interface name="System.Runtime.Serialization.ISerializable" />
                </interfaces>
                <constructors>
                  <constructor name=".ctor(System.Object, System.IntPtr)" attrib="2182">
                    <parameters>
                      <parameter name="object" position="0" attrib="0" type="System.Object" />
                      <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                    </parameters>
                  </constructor>
                </constructors>
                <methods>
                  <method name="BeginInvoke(System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                    <parameters>
                      <parameter name="callback" position="0" attrib="0" type="System.AsyncCallback" />
                      <parameter name="object" position="1" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                  <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                    </parameters>
                  </method>
                  <method name="Invoke()" attrib="454" virtual="true" returntype="System.Void">
                    <parameters />
                  </method>
                </methods>
              </class>
            </classes>
          </class>
          <class name="Report" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="Errors" attrib="22" fieldtype="System.Int32" />
              <field name="Warnings" attrib="22" fieldtype="System.Int32" />
              <field name="WarningsAreErrors" attrib="22" fieldtype="System.Boolean" />
            </fields>
            <properties>
              <property name="WarningLevel" attrib="0" ptype="System.Int32" params="">
                <methods>
                  <method name="get_WarningLevel()" attrib="2198" static="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_WarningLevel(System.Int32)" attrib="2198" static="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
        </classes>
      </namespace>
    </namespaces>
  </assembly>
</assemblies>
