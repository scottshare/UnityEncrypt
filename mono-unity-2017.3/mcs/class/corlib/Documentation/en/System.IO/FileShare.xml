<Type Name="FileShare" FullName="System.IO.FileShare" FullNameSP="System_IO_FileShare" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public sealed serializable FileShare extends System.Enum" />
  <TypeSignature Language="C#" Value="public enum FileShare" />
  <MemberOfLibrary>BCL</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para> Specifies the level of
      access permitted for a file that is already in use.</para>
    </summary>
    <remarks>
      <para>This enumeration is used to specify the way
      in which multiple threads access the same file. The level of access is set by the
      first thread that requests access to the file. For example, if a thread opens a
      file and specifies <see langword="FileShare.Read" />,
      other
      threads are permitted to open the file for reading but not for writing.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="Delete" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Inheritable">
      <MemberSignature Language="C#" Value="Inheritable" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <MemberValue>Inheritable</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.IO.FileShare None = 0x0" />
      <MemberSignature Language="C#" Value="None" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>None</MemberValue>
      <Docs>
        <summary>
          <para> Specifies that the file cannot be accessed by
      additional threads.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
      <Excluded>0</Excluded>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.IO.FileShare Read = 0x1" />
      <MemberSignature Language="C#" Value="Read" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Read</MemberValue>
      <Docs>
        <summary>
          <para> Specifies that additional threads can
      share read access to the file. This value does not determine whether such
      access is granted, however.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
      <Excluded>0</Excluded>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ReadWrite">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.IO.FileShare ReadWrite = Read | Write" />
      <MemberSignature Language="C#" Value="ReadWrite" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>ReadWrite</MemberValue>
      <Docs>
        <summary>
          <para> Specifies that additional threads can
      share read and/or write access to the file. This value does not determine whether
      such access is granted, however.</para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
      <Excluded>0</Excluded>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.IO.FileShare Write = 0x2" />
      <MemberSignature Language="C#" Value="Write" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.IO.FileShare</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Write</MemberValue>
      <Docs>
        <summary>
          <para> 
      Specifies that additional threads can share write access to the file. This value does
      not determine whether such access is granted, however.
      </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
      <Excluded>0</Excluded>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>
