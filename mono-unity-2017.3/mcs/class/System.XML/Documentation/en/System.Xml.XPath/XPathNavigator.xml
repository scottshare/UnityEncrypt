<Type Name="XPathNavigator" FullName="System.Xml.XPath.XPathNavigator">
  <TypeSignature Maintainer="auto" Language="C#" Value="public abstract class XPathNavigator : System.Xml.XPath.XPathItem, ICloneable, System.Xml.IXmlNamespaceResolver, System.Xml.XPath.IXPathNavigable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>All the dynamic members are not designed to be thread safe.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Xml.XPath.XPathItem</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.XPath.IXPathNavigable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides XPath oriented document navigation feature.</summary>
    <remarks>
      <para>This class provides an alternative way to access to XML document than World Wide Web Consortium (W3C) standard Document Object Model. XPathNavigator is designed to navigate document based on "XPath data model" (See <a href="http://www.w3.org/TR/xpath">W3C XPath Recommendation</a>). Unlike <see cref="T:System.Xml.XmlNode" /> and <see cref="T:System.Xml.XmlDocument" />, XPathNavigator does not expose its internal tree structure. Instead, this class exposes "current node" information by its properties and methods such as <see cref="P:System.Xml.XPath.XPathNavigator.LocalName" />,  <see cref="P:System.Xml.XPath.XPathNavigator.NamespaceURI" />,  <see cref="P:System.Xml.XPath.XPathNavigator.NodeType" />, <see cref="M:System.Xml.XPath.XPathNavigator.GetAttribute" /> and so on. See also <see cref="T:System.Xml.XPath.XPathNodeType" /> enumeration that represents all the node types that represents XPathNavigator node type.
	</para>
      <para>With <see cref="M:System.Xml.XPath.XPathNavigator.Evaluate" /> method, you can evaluate XPath expression against the current node. This method returns <see cref="T:System.Object" /> value for the evaluation result that might be either string, number, boolean, node-set or result-tree-fragment. Similarly, <see cref="M:System.Xml.XPath.XPathNavigator.Select" /> method evaluates argument XPath expression that returns XPath "node set" represented as an <see cref="T:System.Xml.XPath.XPathNodeIterator" /> instance.
	</para>
      <para>This class defines some "navigation" methods such as <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild" /> and <see cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />. They are mainly used in XPath evaluation.
	</para>
      <para>Attribute nodes can be visited using <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" /> or <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" /> methods. Instead of navigation, attributes values are directly available via <see cref="M:System.Xml.XPath.XPathNavigator.GetAttribute" /> method.
	</para>
      <para>Namespace nodes can be also visited using <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" /> or <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" /> methods. Note: In terms of XPath, there are three kind of namespace nodes: 1) local namespace declarations, 2) ancestor's namespace declarations that is not overriden by other nearer ancestors, and 3) fixed "xml" prefix that is mapped to "http://www.w3.org/XML/1998/namespace" . Navigation can be filtered using <see cref="T:System.Xml.XPath.XPathNamespaceScope" />.
	</para>
      <para>XPathNavigator is an abstract class and derived classes are provided via <see cref="M:System.Xml.XPath.IXPathNavigable" />. There are two IXPathNavigable implementations in System.Xml.dll: <see cref="T:System.Xml.XPath.XPathDocument" /> and <see cref="T:System.Xml.XmlDocument" />. XPathNavigator can be derived by third-party libraries. Also, they don't have to be limited to XML document navigation.
	</para>
      <para>Note: XPathDocument is optimized for navigation, but to create fully-functional XPathNavigator instance that supports <see cref="M:System.Xml.XPath.XPathNavigator.MoveToId" />, <see cref="T:System.Xml.XmlValidatingReader" /> is required to construct the tree, that means it damages performance. XmlDocument is not optimized for navigation (especially,  previous-sibling navigation is much slower than XPathDocument navigator), but it does not require XmlValidatingReader to support ID navigation. It is recommended to choose implementation case by case.
	</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XPathNavigator ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>The constructor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter AppendChild ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual void AppendChild (string xmlFragments);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlFragments" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlFragments">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual void AppendChild (System.Xml.XmlReader reader);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual void AppendChild (System.Xml.XPath.XPathNavigator nav);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="nav">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AppendChildElement">
      <MemberSignature Language="C#" Value="public virtual void AppendChildElement (string prefix, string name, string ns, string value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <param name="name">To be added.</param>
        <param name="ns">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public abstract string BaseURI { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the base URI of the current node.</summary>
        <value>A string that represents the base URI.</value>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CanEdit">
      <MemberSignature Language="C#" Value="public virtual bool CanEdit { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CheckValidity">
      <MemberSignature Language="C#" Value="public virtual bool CheckValidity (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler handler);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="handler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <param name="schemas">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathNavigator Clone ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clones this instance and returns the copy.</summary>
        <returns>The cloned XPathNavigator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ComparePosition">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeOrder ComparePosition (System.Xml.XPath.XPathNavigator nav);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeOrder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="nav">The XPathNavigator that is being compared.</param>
        <summary>Evaluates in which direction the current node of the argument XPathNavigator exists as compared to the current node of this instance.</summary>
        <returns>
          <see cref="F:System.Xml.XmlNodeOrder.Unknown" /> if the argument navigator comes from different IXPathNavigable instance; <see cref="T:System.Xml.XmlNodeOrder.Same" /> if the navigator is positioned on the same location as this navigator; <see cref="F:System.Xml.XmlNodeOrder.Before" /> if this instance positions current node before the current node of the argument navigator; <see cref="F:System.Xml.XmlNodeOrder.After" /> if the argument navigator positions current node before the current node of this instance.</returns>
        <remarks>If argument navigator was null, then <see cref="T:System.NullReferenceException" /> is thrown.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathExpression Compile (string xpath);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">A string that represents XPath expression.</param>
        <summary>Compiles the specified string that represents XPath expression and returns <see cref="T:System.Xml.XPath.XPathExpression" /> instance.</summary>
        <returns>An <see cref="T:System.Xml.XPath.XPathExpression" /> instance that is the result of compilation.</returns>
        <remarks>When the specified string did not conform to XPath expression syntax, <see cref="System.Xml.XPath.XPathException" /> will be thrown.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public virtual void CreateAttribute (string prefix, string localName, string namespaceURI, string value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <param name="localName">To be added.</param>
        <param name="namespaceURI">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter CreateAttributes ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DeleteRange">
      <MemberSignature Language="C#" Value="public virtual void DeleteRange (System.Xml.XPath.XPathNavigator nav);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="nav">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DeleteSelf">
      <MemberSignature Language="C#" Value="public virtual void DeleteSelf ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (string xpath);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">A string value that represents an XPath expression</param>
        <summary>Evaluates an XPath expression and returns the result. The call to this method is equivalent to Evaluate (Compile (xpath)).</summary>
        <returns>An <see cref="System.Object" /> instance that represents the evaluation result.</returns>
        <remarks>To evaluate such XPath expression that contains certain namespace prefixes, XmlNamespaceManager is required and thus XPathExpression is required to do such evaluation.
		</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (System.Xml.XPath.XPathExpression expr);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <param name="expr">An <see cref="T:System.Xml.XPath.XPathExpression" /> instance that represents an XPath expression.</param>
        <summary>Evaluates an XPath expression and returns the result. The call to this method is equivalent to Evaluate (expr, null).</summary>
        <returns>An <see cref="System.Object" /> instance that represents the evaluation result.</returns>
        <remarks>To evaluate such XPath expression that contains certain namespace prefixes, the argument expression must be supplied XmlNamespaceManager via <see cref="M:System.Xml.XPath.XPathExpression.SetContext" /> method. If no matching namespace prefix were found in the XPath expression, an <see cref="T:System.Xml.XPath.XPathException" /> is thrown.
		</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (string xpath, System.Xml.IXmlNamespaceResolver nsResolver);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="xpath">To be added.</param>
        <param name="nsResolver">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (System.Xml.XPath.XPathExpression expr, System.Xml.XPath.XPathNodeIterator context);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
        <Parameter Name="context" Type="System.Xml.XPath.XPathNodeIterator" />
      </Parameters>
      <Docs>
        <param name="expr">An <see cref="T:System.Xml.XPath.XPathExpression" /> instance that represents an XPath expression.</param>
        <param name="context">An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> instance that represents the context node.</param>
        <summary>Evaluates an XPath expression and returns the result.</summary>
        <returns>An <see cref="System.Object" /> instance that represents the evaluation result.</returns>
        <remarks>
          <para>To evaluate such XPath expression that contains certain namespace prefixes, the argument expression must be supplied XmlNamespaceManager via <see cref="M:System.Xml.XPath.XPathExpression.SetContext" /> method. If no matching namespace prefix were found in the XPath expression, an <see cref="T:System.Xml.XPath.XPathException" /> is thrown.
		</para>
          <para>Note: "context" argument means different from "current node" represented by this instance itself. (See <a href="http://www.w3.org/TR/xslt#misc-func">current()</a> function specified in XSLT specification for details.)</para>
        </remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string localName, string namespaceURI);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">The local part of the target attribute name.</param>
        <param name="namespaceURI">The namespace URI part of the target attribute name.</param>
        <summary>Gets the value string of the specified attribute.</summary>
        <returns>The value of the specified attribute. String.Empty if the current node is not element, or specified attribute was not found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetNamespace">
      <MemberSignature Language="C#" Value="public virtual string GetNamespace (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A string that represents the prefix.</param>
        <summary>Gets the namespace URI that is mapped to the argument prefix.</summary>
        <returns>The namespace URI string if there was the specified namespace node. String.Empty if no such namespace node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public virtual bool HasAttributes { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the current node has attributes or not.</summary>
        <value>True if the current node is element and has one or more attributes; Otherwise False.</value>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public virtual bool HasChildren { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the current node has children or not.</summary>
        <value>True if the current node is element and has one or more children; Otherwise False (attribute and namespace nodes don't have "children").
		</value>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public virtual string InnerXml { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter InsertAfter ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertAfter (string xmlFragments);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlFragments" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlFragments">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertAfter (System.Xml.XmlReader reader);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertAfter (System.Xml.XPath.XPathNavigator nav);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="nav">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter InsertBefore ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertBefore (string xmlFragments);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlFragments" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlFragments">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertBefore (System.Xml.XmlReader reader);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertBefore (System.Xml.XPath.XPathNavigator nav);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="nav">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InsertElementAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertElementAfter (string prefix, string localName, string namespaceURI, string value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <param name="localName">To be added.</param>
        <param name="namespaceURI">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InsertElementBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertElementBefore (string prefix, string localName, string namespaceURI, string value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <param name="localName">To be added.</param>
        <param name="namespaceURI">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsDescendant">
      <MemberSignature Language="C#" Value="public virtual bool IsDescendant (System.Xml.XPath.XPathNavigator nav);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="nav">The XPathNavigator that is being evaluated.</param>
        <summary>Evaluates if the current node of the argument XPathNavigator is a descendant of the current node of this instance.</summary>
        <returns>True if the argument navigator is a descendant of this navigator; Otherwise False.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public abstract bool IsEmptyElement { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the current node is "empty tag element" or not.</summary>
        <value>True if the current ndoe is empty tag element; False if the current node is not an element, or an element that has contents, or an element that has explicit close tag.</value>
        <remarks>This property is nothing to do with XPath data model, nor constructs any part of XML Infoset. This only affects to the XSLT output format.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsNode">
      <MemberSignature Language="C#" Value="public override sealed bool IsNode { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsSamePosition">
      <MemberSignature Language="C#" Value="public abstract bool IsSamePosition (System.Xml.XPath.XPathNavigator other);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="other">An <see cref="System.Xml.XPath.XPathNavigator" /> that is being compared the current node's position.</param>
        <summary>Evaluates if the current node of the argument XPathNavigator is positioned as the same as the current node of this instance.</summary>
        <returns>True if the current node was the same position; Otherwise False.</returns>
        <remarks>This method only works when both of the XPathNavigators were created from the same <see cref="T:System.Xml.XPath.IXPathNavigable" /> instance. It won't work for example when one was created from <see cref="T:System.Xml.XmlDocument" /> and the other was created from <see cref="T:System.Xml.XPath.XPathDocument" /> even if they positions the same node.
		</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the local part of the current node, or prefix of the current namespace node.</summary>
        <value>A string that represents the local name or the namespace prefix.</value>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public virtual string LookupNamespace (string prefix);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public virtual string LookupPrefix (string namespaceUri);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceUri">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public virtual bool Matches (string xpath);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">A string that represents the XPath expression.</param>
        <summary>Evaluates if the current node matches with the argument XPath expression. The call to this method is equivalent to Matches (Compile (xpath)).</summary>
        <returns>True if the current node matches; otherwise False.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public virtual bool Matches (System.Xml.XPath.XPathExpression expr);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <param name="expr">An <see cref="T:System.Xml.XPath.XPathExpression" /> instance that represents an XPath expression.</param>
        <summary>Evaluates if the current node matches with the argument XPath expression.</summary>
        <returns>True if the current node matches; otherwise False.</returns>
        <remarks>To evaluate such XPath expression that contains certain namespace prefixes, the argument expression must be supplied XmlNamespaceManager via <see cref="M:System.Xml.XPath.XPathExpression.SetContext" /> method. If no matching namespace prefix were found in the XPath expression, an <see cref="T:System.Xml.XPath.XPathException" /> is thrown.
		</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public abstract bool MoveTo (System.Xml.XPath.XPathNavigator other);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="other">An <see cref="T:System.Xml.XPath.XPathNavigator" /> that positions the target node.</param>
        <summary>Moves the current node of this instance to the current node of the argument navigator.</summary>
        <returns>True if it successfully moved the current node; Otherwise False.</returns>
        <remarks>This method will fail to move the current node when the both navigator were not created from the same <see cref="T:System.Xml.XPath.IXPathNavigable" /> instance.
		</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public virtual bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">The local part of the target attribute name.</param>
        <param name="namespaceURI">The namespace URI part of the target attribute name.</param>
        <summary>Moves the current node to the specified attribute.</summary>
        <returns>True if the current node was successfully moved to the specified attribute; Otherwise False.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToChild">
      <MemberSignature Language="C#" Value="public virtual bool MoveToChild (System.Xml.XPath.XPathNodeType type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToChild">
      <MemberSignature Language="C#" Value="public virtual bool MoveToChild (string localName, string namespaceURI);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">To be added.</param>
        <param name="namespaceURI">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToFirst">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFirst ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moves the current node to the first sibling node.</summary>
        <returns>True if the current node was not the first sibling and moved successfully; False if it is the first node for the other siblings.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstAttribute ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moves the current node to the first attribute.</summary>
        <returns>True if the current node was successfully moved to the first attribute; False if the current node is not element, or the current element has no attributes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToFirstChild">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstChild ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moves the current node to the first child node.</summary>
        <returns>True if the current node had the first child and moved successfully; Otherwise False.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToFirstNamespace">
      <MemberSignature Language="C#" Value="public bool MoveToFirstNamespace ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moves the current node to the first namespace node. The call to this method is euivalent to MoveToFirstNamespace (XPathNamespaceScope.All).</summary>
        <returns>True if the current node was an element and successfully moved to the first namespace node; Otherwise False.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToFirstNamespace">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstNamespace (System.Xml.XPath.XPathNamespaceScope namespaceScope);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceScope" Type="System.Xml.XPath.XPathNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="namespaceScope">An <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> value that filters the target namespace nodes.</param>
        <summary>Moves the current node to the first namespace node, filtered by the argument scope.</summary>
        <returns>True if the current node the namespace nodes and moved to the first namespace node successfully; False if the current node is not an element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (System.Xml.XPath.XPathNodeType type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (string localName, string namespaceURI);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">To be added.</param>
        <param name="namespaceURI">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (System.Xml.XPath.XPathNodeType type, System.Xml.XPath.XPathNavigator end);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
        <Parameter Name="end" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="end">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (string localName, string namespaceURI, System.Xml.XPath.XPathNavigator end);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="end" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="localName">To be added.</param>
        <param name="namespaceURI">To be added.</param>
        <param name="end">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToId">
      <MemberSignature Language="C#" Value="public abstract bool MoveToId (string id);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">A string that represents the target node ID.</param>
        <summary>Moves the current node to the node that matches with the specified ID.</summary>
        <returns>True if the current node was successfully moved; Otherwise False.</returns>
        <remarks>When <see cref="T:System.Xml.XmlDocument" /> is used as the source <see cref="System.Xml.XPath.IXPathNavigable" />, only document type definition is required to support node ID. When <see cref="T:System.Xml.XPath.XPathDocument" /> is used, then that XPathDocument must be created with <see cref="T:System.Xml.XmlValidatingReader" /> or any other constructor parameter than <see cref="T:System.Xml.XmlReader" />.
		</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToNamespace">
      <MemberSignature Language="C#" Value="public virtual bool MoveToNamespace (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A string that represents the prefix.</param>
        <summary>Mpves the current node to the namespace node that has the specified prefix.</summary>
        <returns>True if there was the specified namespace node and moved to the namespace node successfully; False if no such namespace node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToNext">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNext ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moves the current node to the next sibling node.</summary>
        <returns>True if the current node has the next sibling and moved successfully; False if it is the last node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToNext">
      <MemberSignature Language="C#" Value="public virtual bool MoveToNext (System.Xml.XPath.XPathNodeType type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToNext">
      <MemberSignature Language="C#" Value="public virtual bool MoveToNext (string localName, string namespaceURI);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">To be added.</param>
        <param name="namespaceURI">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNextAttribute ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moves the current node to the next attribute.</summary>
        <returns>True if the current node was successfully moved to the next attribute; Otherwise False.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToNextNamespace">
      <MemberSignature Language="C#" Value="public bool MoveToNextNamespace ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moves the current node to the next namespace node. The call to this method is euivalent to MoveToNextNamespace (XPathNamespaceScope.All).</summary>
        <returns>True if the current node was a namespace node and successfully moved to the next namespace node; Otherwise False.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToNextNamespace">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNextNamespace (System.Xml.XPath.XPathNamespaceScope namespaceScope);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceScope" Type="System.Xml.XPath.XPathNamespaceScope" />
      </Parameters>
      <Docs>
        <param name="namespaceScope">An <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> value that filters the target namespace nodes.</param>
        <summary>Moves the current node to the next namespace node, filtered by the argument scope.</summary>
        <returns>True if the current node has the next namespace and moved successfully; False if it is the last namespace node or not positioned a namespace node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToParent">
      <MemberSignature Language="C#" Value="public abstract bool MoveToParent ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moves the current node to the parent node. If the current node is attribute, then it moves to the owner element node. It also applies to the current node is namespace (note that the parent node of a namespace node is not always local parent node).
		</summary>
        <returns>True if the current node had parent node and moved successfully; Otherwise False.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToPrevious">
      <MemberSignature Language="C#" Value="public abstract bool MoveToPrevious ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moves the current node to the previous sibling node.</summary>
        <returns>True if the current node has the previous sibling and moved successfully; False if it is the first node.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MoveToRoot">
      <MemberSignature Language="C#" Value="public virtual void MoveToRoot ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moves the current node to the document root. This method never fails.</summary>
        <remarks>
		Even if the navigator is created from <see cref="T:System.Xml.XmlNode" />, the navigator moves to the <see cref="M:System.Xml.XmlNode.OwnerDocument" />, not the argument XmlNode.
		</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the prefixed tag name of the current node, or namespace prefix of the current namespace node.</summary>
        <value>A string that represents the tag name or the namespace prefix.</value>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public abstract string NamespaceURI { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the namespace URI part of the current node, or namespace URI of the current namespace node.</summary>
        <value>A string that represents the namespace URI.</value>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNameTable NameTable { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name table that is used in this instance.</summary>
        <value>An <see cref="T:System.Xml.XmlNameTable" /> instance for this instance.</value>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="NavigatorComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.IEqualityComparer NavigatorComparer { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.IEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathNodeType NodeType { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the node type of the current node based on "XPath data model".</summary>
        <value>An <see cref="T:System.Xml.XPath.XPathNodeType" /> value that indicates the node type of the current node.</value>
        <remarks>The initial value of this property depends on the each XPathNavigator implementation (that is, it depends on <see cref="T:System.Xml.XPath.IXPathNavigable" />).
		</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public virtual string OuterXml { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public abstract string Prefix { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the prefix of the current node.</summary>
        <value>A string that represents the prefix of the current node, or String.Empty if the current node is namespace.</value>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter PrependChild ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual void PrependChild (string xmlFragments);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlFragments" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlFragments">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual void PrependChild (System.Xml.XmlReader reader);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual void PrependChild (System.Xml.XPath.XPathNavigator nav);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="nav">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PrependChildElement">
      <MemberSignature Language="C#" Value="public virtual void PrependChildElement (string prefix, string localName, string namespaceURI, string value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <param name="localName">To be added.</param>
        <param name="namespaceURI">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader ReadSubtree ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ReplaceRange">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter ReplaceRange (System.Xml.XPath.XPathNavigator nav);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="nav">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ReplaceSelf">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSelf (string xmlFragment);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlFragment">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ReplaceSelf">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSelf (System.Xml.XmlReader reader);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ReplaceSelf">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSelf (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator Select (string xpath);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">A string value that represents an XPath expression</param>
        <summary>Evaluates an XPath expression that returns XPath node-set and returns the result. The call to this method is equivalent to Select (Compile (xpath)).</summary>
        <returns>An <see cref="System.Xml.XPath.XPathNodeIterator" /> instance that holds all the results.</returns>
        <remarks>To evaluate such XPath expression that contains certain namespace prefixes, XmlNamespaceManager is required and thus XPathExpression is required to do such evaluation.
		</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator Select (System.Xml.XPath.XPathExpression expr);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <param name="expr">An <see cref="T:System.Xml.XPath.XPathExpression" /> instance that represents an XPath expression.</param>
        <summary>Evaluates an XPath expression that returns XPath node-set and returns the result. This method is the same as the result of Select (Compile (xpath)).</summary>
        <returns>An <see cref="System.Xml.XPath.XPathNodeIterator" /> instance that holds all the results.</returns>
        <remarks>To evaluate such XPath expression that contains certain namespace prefixes, the argument expression must be supplied XmlNamespaceManager via <see cref="M:System.Xml.XPath.XPathExpression.SetContext" /> method. If no matching namespace prefix were found in the XPath expression, an <see cref="T:System.Xml.XPath.XPathException" /> is thrown.
		</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator Select (string xpath, System.Xml.IXmlNamespaceResolver nsResolver);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="xpath">To be added.</param>
        <param name="nsResolver">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectAncestors">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectAncestors (System.Xml.XPath.XPathNodeType type, bool matchSelf);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">An <see cref="T:System.Xml.XPath.XPathNodeType" /> value that indicates the filtered type of the node query.</param>
        <param name="matchSelf">Indicates if the result contains the current node itself or not.</param>
        <summary>Selects the ancestor nodes and optionally the current node itself that has specific node type.</summary>
        <returns>The <see cref="T:System.Xml.XPath.XPathNodeIterator" /> instance that holds all the resulting nodes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectAncestors">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectAncestors (string name, string namespaceURI, bool matchSelf);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The local part of the target node name.</param>
        <param name="namespaceURI">The namespace URI part of the target node name.</param>
        <param name="matchSelf">Indicates if the result contains the current node itself or not.</param>
        <summary>Selects the ancestor nodes and optionally the current node itself that has specific qualified name of the current node of this instance. The typical usage of this method is internal XPath evaluation of "ancestor::foo" or "ancestor-or-self::bar".</summary>
        <returns>The <see cref="T:System.Xml.XPath.XPathNodeIterator" /> instance that holds all the resulting nodes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectChildren">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectChildren (System.Xml.XPath.XPathNodeType type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <param name="type">An <see cref="T:System.Xml.XPath.XPathNodeType" /> value that indicates the filtered type of the node query.</param>
        <summary>Selects the child nodes that has specific qualified name.</summary>
        <returns>The <see cref="T:System.Xml.XPath.XPathNodeIterator" /> instance that holds all the resulting nodes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectChildren">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectChildren (string name, string namespaceURI);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The local part of the target node name.</param>
        <param name="namespaceURI">The namespace URI part of the target node name.</param>
        <summary>Selects the child nodes that has specific qualified name.</summary>
        <returns>The <see cref="T:System.Xml.XPath.XPathNodeIterator" /> instance that holds all the resulting nodes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectDescendants">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectDescendants (System.Xml.XPath.XPathNodeType type, bool matchSelf);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">An <see cref="T:System.Xml.XPath.XPathNodeType" /> value that indicates the filtered type of the node query.</param>
        <param name="matchSelf">Indicates if the result contains the current node itself or not.</param>
        <summary>Selects the descendant nodes and optionally the current node itself that has specific node type.</summary>
        <returns>The <see cref="T:System.Xml.XPath.XPathNodeIterator" /> instance that holds all the resulting nodes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectDescendants">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectDescendants (string name, string namespaceURI, bool matchSelf);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The local part of the target node name.</param>
        <param name="namespaceURI">The namespace URI part of the target node name.</param>
        <param name="matchSelf">Indicates if the result contains the current node itself or not.</param>
        <summary>Selects the descendant nodes and optionally the current node itself that has specific qualified name of the current node of this instance. The typical usage of this method is internal XPath evaluation of "descendant::foo" or "descendant-or-self::bar".</summary>
        <returns>The <see cref="T:System.Xml.XPath.XPathNodeIterator" /> instance that holds all the resulting nodes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (string xpath);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (System.Xml.XPath.XPathExpression expression);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (string xpath, System.Xml.IXmlNamespaceResolver nsResolver);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="xpath">To be added.</param>
        <param name="nsResolver">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SetTypedValue">
      <MemberSignature Language="C#" Value="public virtual void SetTypedValue (object value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (string value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Overriden. Returns the node value of the current node. The value is equivalent to <see cref="P:System.Xml.XPath.XPathNavigator.Value" /> property.</summary>
        <returns>A string that represents the node value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="TypedValue">
      <MemberSignature Language="C#" Value="public override object TypedValue { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="UnderlyingObject">
      <MemberSignature Language="C#" Value="public virtual object UnderlyingObject { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract string Value { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the "value" of the current node.</summary>
        <value>A string that represents the value of the current node.</value>
        <remarks>
          <para>The definition of the "value" of a node is 1) concatenation of the values of each descendant nodes for <see cref="F:System.Xml.XPath.XPathNodeType.Root" /> and <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> nodes, 2) namespace URI for <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />, and 3) value string (as is) for all other kind of node types.
		</para>
          <para>Note: When the instance of this class is created from <see cref="T:System.Xml.XmlDocument" />, the sequential <see cref="T:System.Xml.XmlCharacterData" /> nodes (except for <see cref="T:System.Xml.XmlComment" /> nodes) are regarded as one text or node (strictly to say, <see cref="F:System.Xml.XPath.XPathNodeType.Text" />, <see cref="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Whitespace" />).
		</para>
        </remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ValueAs">
      <MemberSignature Language="C#" Value="public override object ValueAs (Type type, System.Xml.IXmlNamespaceResolver nsResolver);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="nsResolver">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ValueAsBoolean">
      <MemberSignature Language="C#" Value="public override bool ValueAsBoolean { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ValueAsDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ValueAsDateTime { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ValueAsDouble">
      <MemberSignature Language="C#" Value="public override double ValueAsDouble { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ValueAsInt">
      <MemberSignature Language="C#" Value="public override int ValueAsInt { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ValueAsLong">
      <MemberSignature Language="C#" Value="public override long ValueAsLong { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public override Type ValueType { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="WriteSubtree">
      <MemberSignature Language="C#" Value="public virtual void WriteSubtree (System.Xml.XmlWriter writer);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the xml:lang context value that is specified in the current node, or inherited from the nearest ancestor of the current node that is locally specified xml:lang attribute.</summary>
        <value>A string value that contains xml:lang context value.</value>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.XmlSchemaType XmlType { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>
