<MyDocs>
<MyMembers name="Class">
<remarks>
	<para>
	The <B>MySQLDataAdapter</B>, serves as a bridge between a <see cref="System.Data.DataSet"/>
	and MySQL for retrieving and saving data. The <B>MySQLDataAdapter</B> provides this 
	bridge by mapping <see cref="DbDataAdapter.Fill"/>, which changes the data in the 
	<B>DataSet</B> to match the data in the data source, and <see cref="DbDataAdapter.Update"/>, 
	which changes the data in the data source to match the data in the <B>DataSet</B>, 
	using the appropriate SQL statements against the data source.
	</para>
	<para>
	When the <B>MySQLDataAdapter</B> fills a <B>DataSet</B>, it will create the necessary 
	tables and columns for the returned data if they do not already exist. However, primary 
	key information will not be included in the implicitly created schema unless the 
	<see cref="System.Data.MissingSchemaAction"/> property is set to <see cref="System.Data.MissingSchemaAction.AddWithKey"/>. 
	You may also have the <B>MySQLDataAdapter</B> create the schema of the <B>DataSet</B>, 
	including primary key information, before filling it with data using <see cref="System.Data.Common.DbDataAdapter.FillSchema"/>. 
	</para>
	<para><B>MySQLDataAdapter</B> is used in conjunction with <see cref="MySqlConnection"/>
	and <see cref="MySqlCommand"/> to increase performance when connecting to a MySQL database.
	</para>
	<para>The <B>MySQLDataAdapter</B> also includes the <see cref="MySqlDataAdapter.SelectCommand"/>, 
	<see cref="MySqlDataAdapter.InsertCommand"/>, <see cref="MySqlDataAdapter.DeleteCommand"/>, 
	<see cref="MySqlDataAdapter.UpdateCommand"/>, and <see cref="DataAdapter.TableMappings"/> 
	properties to facilitate the loading and updating of data.
	</para>
	<para>When an instance of <B>MySQLDataAdapter</B> is created, the read/write properties 
	are set to initial values. For a list of these values, see the <B>MySQLDataAdapter</B> 
	constructor.
	</para>
</remarks>

<example>
	The following example creates a <see cref="MySqlCommand"/> and a <see cref="MySqlConnection"/>. 
	The <B>MySqlConnection</B> is opened and set as the <see cref="MySqlCommand.Connection"/> for the 
	<B>MySqlCommand</B>. The example then calls <see cref="MySqlCommand.ExecuteNonQuery"/>, and closes 
	the connection. To accomplish this, the <B>ExecuteNonQuery</B> is 
	passed a connection string and a query string that is a SQL INSERT 
	statement.
	<code lang="Visual Basic">
Public Function SelectRows(dataSet As DataSet, connection As String, query As String) As DataSet
    Dim conn As New MySqlConnection(connection)
    Dim adapter As New MySqlDataAdapter()
    adapter.SelectCommand = new MySqlCommand(query, conn)
    adapter.Fill(dataset)
    Return dataset
End Function
	</code>
	<code lang="C#">
public DataSet SelectRows(DataSet dataset,string connection,string query) 
{
    MySqlConnection conn = new MySqlConnection(connection);
    MySqlDataAdapter adapter = new MySqlDataAdapter();
    adapter.SelectCommand = new MySqlCommand(query, conn);
    adapter.Fill(dataset);
    return dataset;
}
	</code>
</example>
</MyMembers>

<MyMembers name="ConnectionTimeout">
	<exception cref="System.ArgumentException">The value set is less than 0.</exception>
	<remarks>
		A value of 0 indicates no limit, and should be avoided in a <see cref="MySqlConnection.ConnectionString"/> 
		because an attempt to connect will wait indefinitely.
	</remarks>
	<example>
		The following example creates a MySqlConnection
		and sets some of its properties in the connection string.
		<code lang="Visual Basic"><c>
Public Sub CreateSqlConnection()
	Dim myConnection As New MySqlConnection()
	myConnection.ConnectionString = "Persist Security Info=False;Username=user;Password=pass;database=test1;server=localhost;Connect Timeout=30"
	myConnection.Open()
End Sub
</c></code>
<code lang="C#"><c>
public void CreateSqlConnection() 
{
	MySqlConnection myConnection = new MySqlConnection();
	myConnection.ConnectionString = "Persist Security Info=False;Username=user;Password=pass;database=test1;server=localhost;Connect Timeout=30";
	myConnection.Open();
}
</c></code>				
	</example>
</MyMembers>

</MyDocs>