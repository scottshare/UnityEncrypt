<MyDocs>
<MyMembers name="Class">
<remarks>
<B>MySqlCommand</B> features the following methods for executing commands at a MySQL database:
<list type="table">
	<listheader><term>Item</term><term>Description</term></listheader>
	<item>
		<term><a href="ByteFX.Data.MySqlClient.MySqlCommand.ExecuteReader_overloads.html">ExecuteReader</a></term>
		<description>Executes commands that return rows.</description>
	</item>
	<item>
		<term><a href="ByteFX.Data.MySqlClient.MySqlCommand.ExecuteNonQuery.html">ExecuteNonQuery</a></term>
		<description>Executes commands such as SQL INSERT, DELETE, and UPDATE statements.</description>
	</item>
	<item>
		<term><a href="ByteFX.Data.MySqlClient.MySqlCommand.ExecuteScalar.html">ExecuteScalar</a></term>
		<description>Retrieves a single value (for example, an aggregate value) from a database.</description>
	</item>
</list>

You can reset the <B>CommandText</B> property and reuse the <B>MySqlCommand</B> 
object. However, you must close the <A 
href="ByteFX.Data.MySqlClient.MySqlDataReader.html">MySqlDataReader</A> 
before you can execute a new or previous command.

If a <A href="ByteFX.Data.MySqlClient.MySqlException.html">MySqlException</A> is 
generated by the method executing a <B>MySqlCommand</B>, the <A 
href="ByteFX.Data.MySqlClient.MySqlConnection.html">MySqlConnection</A> 
remains open.  It is the responsibility of the programmer to close the connection.
</remarks>

<example>
	The following example creates a <A href="frlrfsystemdatasqlclientsqlcommandclasstopic.htm">MySqlCommand</A> and 
	a <B>MySqlConnection</B>. The <B>MySqlConnection</B> is opened and set as the <A 
	href="frlrfsystemdatasqlclientsqlcommandclassconnectiontopic.htm">Connection</A> 
	for the <B>MySqlCommand</B>. The example then calls <A 
	href="frlrfsystemdatasqlclientsqlcommandclassexecutenonquerytopic.htm">ExecuteNonQuery</A>, 
	and closes the connection. To accomplish this, the <B>ExecuteNonQuery</B> is 
	passed a connection string and a query string that is a SQL INSERT 
	statement.
	<code lang="Visual Basic">
Public Sub InsertRow(myConnectionString As String)
	' If the connection string is null, use a default.
	If myConnectionString = "" Then
		myConnectionString = "Database=Test;Data Source=localhost;User Id=username;Password=pass"
	End If
	Dim myConnection As New MySqlConnection(myConnectionString)
	Dim myInsertQuery As String = "INSERT INTO Orders (id, customerId, amount) Values(1001, 23, 30.66)"
	Dim myCommand As New MySqlCommand(myInsertQuery)
	myCommand.Connection = myConnection
	myConnection.Open()
	myCommand.ExecuteNonQuery()
	myCommand.Connection.Close()
End Sub
	</code>
	<code lang="C#">
public void InsertRow(string myConnectionString) 
{
	// If the connection string is null, use a default.
	if(myConnectionString == "") 
	{
		myConnectionString = "Database=Test;Data Source=localhost;User Id=username;Password=pass";
	}
	MySqlConnection myConnection = new MySqlConnection(myConnectionString);
	string myInsertQuery = "INSERT INTO Orders (id, customerId, amount) Values(1001, 23, 30.66)";
	MySqlCommand myCommand = new MySqlCommand(myInsertQuery);
	myCommand.Connection = myConnection;
	myConnection.Open();
	myCommand.ExecuteNonQuery();
	myCommand.Connection.Close();
}
	</code>
</example>


</MyMembers>

<MyMembers name="ConnectionTimeout">
	<exception cref="System.ArgumentException">The value set is less than 0.</exception>
	<remarks>
		A value of 0 indicates no limit, and should be avoided in a 
		<a href="ByteFX.Data.MySqlClient.MySqlConnection.ConnectionString.html">ConnectionString</a>
		because an attempt to connect will wait indefinitely.
	</remarks>
	<example>
		The following example creates a MySqlConnection
		and sets some of its properties in the connection string.
		<code lang="Visual Basic"><c>
Public Sub CreateSqlConnection()
	Dim myConnection As New MySqlConnection()
	myConnection.ConnectionString = "Persist Security Info=False;Username=user;Password=pass;database=test1;server=localhost;Connect Timeout=30"
	myConnection.Open()
End Sub
</c></code>
<code lang="C#"><c>
public void CreateSqlConnection() 
{
	MySqlConnection myConnection = new MySqlConnection();
	myConnection.ConnectionString = "Persist Security Info=False;Username=user;Password=pass;database=test1;server=localhost;Connect Timeout=30";
	myConnection.Open();
}
</c></code>				
	</example>
</MyMembers>

</MyDocs>