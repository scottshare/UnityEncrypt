<Type Name="RegexOptions" FullName="System.Text.RegularExpressions.RegexOptions">
  <TypeSignature Language="C#" Maintainer="auto" Value="public enum RegexOptions" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.3300.0</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The various options that can be applied to a regular expression are listed below along with a brief explanation.</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Members>
    <Member MemberName="Compiled">
      <MemberSignature Language="C#" Value="Compiled" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Precompiles the regular expression into an assembly.  Although this will speed up the execution time, the startup time will be increased.  This is very useful for a static regular expression used constantly.</summary>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CultureInvariant">
      <MemberSignature Language="C#" Value="CultureInvariant" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enables the regular expression to ignore cultural differences in language when matching.</summary>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ECMAScript">
      <MemberSignature Language="C#" Value="ECMAScript" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enables EMCAScript compliant behavior for the regular expression.  It must be enabled in conjuction with <b>IgnoreCase</b>, <b>Multiline</b>, and <b>Compiled</b> or else it will raise an exception.</summary>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ExplicitCapture">
      <MemberSignature Language="C#" Value="ExplicitCapture" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This mode will change the behavior of the regular expression such that only captures which are explicitly named will be remembered.  As a result, unnamed groups become noncapturing groups without the use of the (?:) style.</summary>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="IgnoreCase" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enables case insensitive matching of the regular expression.</summary>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IgnorePatternWhitespace">
      <MemberSignature Language="C#" Value="IgnorePatternWhitespace" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes any unescaped whitespace in the pattern.  It also enables comments which are identified by the '#' character.</summary>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="Multiline" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Changes the behavior of the metacharacters ^ and $.  With this mode ^ matches the beginning of any line, and $ matches the end of any line.  The default behavior is to mach the beginning and ending of the entire string.</summary>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This specifies that no options are set for the regular expression.</summary>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="RightToLeft" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Specifies that the regular expression be run right to left rather than left to right.</summary>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Singleline">
      <MemberSignature Language="C#" Value="Singleline" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This changes the behavior of the metacharacter . to mean any character rather than any character other than \n.</summary>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>
