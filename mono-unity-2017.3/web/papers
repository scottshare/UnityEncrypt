* JIT Compiler

  <a
  href="http://citeseer.nj.nec.com/vitek97efficient.html">
  Efficient Type Inclusion Tests: Jahn Vitek, R. Nigel Horspool, Andres
  Krall</a>

  <a
  href="http://citeseer.nj.nec.com/cytron91efficiently.html">
  Efficiently Computing Static Single Assignment Form and the Control
  Dependence Graph: Ron Cytron, Jeanne Ferrante</a> 

  <a
  href="http://citeseer.nj.nec.com/193349.html">
  Practical Improvements to the Construction and Destruction of Static Single Assignment Form: Preston Briggs,
  Keith Cooper, Timothy Harvey, Taylor Simpson</a>

  <a
  href="http://citeseer.nj.nec.com/krall98efficient.html">
  Efficient JavaVM Just-in-Time Compilation: Andreas Krall</a>

  <a
  href="http://citeseer.nj.nec.com/452617.html">Java for
  Large-Scale Scientific Computations: Andreas Krall, Phillip Thomsich</a> 

  <a
  href="http://citeseer.nj.nec.com/117522.html">
  Engineering Simple, Efficient Code Generator Generator: Christopher
  W. Fraser, David R. Hanson, Todd A. Proebsting</a> 

  <a
  href="http://citeseer.nj.nec.com/proebsting92code.html">
  Code Generation Techniques: Todd Alan Proebsting</a>

  <a
  href="http://citeseer.nj.nec.com/74629.html">Fast,
  Effective Code Generation in a Just-In-Time Java Compiler: Ali-Reza
  Adl-Tabatabai Guei-Yuan Lueh, Vishesh M. Parikh, James M. Stichnoth...</a>

  <a
  href="http://citeseer.nj.nec.com/bodik00abcd.html">
  ABCD: Eliminating Array-Bounds Checks on Demand: Rastislav Bodik, Rajiv Gupta, Vivek Sarkar</a>

* Register Allocation

  <a
  href="http://citeseer.nj.nec.com/poletto99linear.html">
  Linear Scan Register Allocation: Massimiliano Poletto, Vivek Sarkar</a>

  <a
  href="http://citeseer.nj.nec.com/traub98quality.html">
  Quality and Speed in Linear-scan Register Allocation: Omri Traub, Glenn
  Holloway, Michael D. Smith</a> 

* Loop Transformations

  <a
  href="http://citeseer.nj.nec.com/bacon93compiler.html">
  Compiler Transformations for High-Performance Computing: David Bacon</a>

* Interpreter

  <a
  href="http://citeseer.nj.nec.com/470069.html">
  vmgen-A Generator of Efficient Virtual Machine Interpreters: M. Anton
  Ertl, David Gregg, Andreas Krall, Bernd Paysan</a>

* Synchronization

  <a
  href="http://citeseer.nj.nec.com/krall98monitors.html">
  Monitors and Exceptions - How to implement Java efficiently: Andreas Krall,
  Mark Probst</a> 

  <a
  href="http://citeseer.nj.nec.com/bacon98thin.html">
  Thin Locks: Featherweight Synchronization for Java: David Bacon</a>

  <a
  href="http://citeseer.nj.nec.com/278639.html">
  Featherweight Monitors with Bacon Bits: David Bacon</a>

* Garbage Collection

  <a
  href="http://citeseer.nj.nec.com/wilson92uniprocessor.html">
  Uniprocessor Garbage Collection Techniques: Paul Wilson</a>

  <a
  href="http://citeseer.nj.nec.com/41666.html">
  A Language-Independent Garbage Collector Toolkit: Richard Hudson, Eliot Moss, Amer Diwan, Christopher Weight</a>

  <a
  href="http://citeseer.nj.nec.com/seligmann95incremental.html">
  Incremental Collection of Mature Objects: Richard Hudson, Eliot Moss</a>

* Threads

  <a
   href="http://research.microsoft.com/~birrell/papers/ThreadsCSharp.pdf">
   Programming with Threads in C#: Andrew Birrell</a>
