* Class Library Documentation

** Summary

	While using inline XML tags to document classes is certainly
	convenient, properly verbose documentation quickly overwhelms
	the code, making the source quite difficult to read.  Furthermore,
	multilingual documentation makes for significant additional text.
	
	With these considerations in mind, Mono is using external XML files
	for class documentation, rather than documenting the source
	inline.  The XML file format used is inspired by the XML format used
	to document the ECMA APIs.  

	Several tools exist for managing, verifying, generating,
	and updating class library documentation.

	The documentation infrastructure is part of the `Monodoc'
	module.  Monodoc includes a graphical GUI browser and tools to
	generate the initial stubbed XML document out of an assembly.
	
	Download `monodoc' to start producing documentation for your
	application. 

	For instructions, read the monodoc/README file.

** Documentation Tools

*** <a name="monodoc">MonoDoc</a>

	The MonoDoc system offers both a GUI client as well as a <a
	href="http://www.go-mono.com:8080">Web-based interface</a> to
	the documentation.

	The GUI edition uses <a
	href="http://gtk-sharp.sf.net">Gtk#</a> and the Web edition
	uses Mono's ASP.NET implementation. 

	<img src="images/Screenshot-Monodoc.png">

** Get Involved

	Help us develop Mono's documentation tools!  Subscribe to
	<a href="http://lists.ximian.com/mailman/listinfo/mono-docs-list">mono-docs-list</a>
	and wade right in.

	Monodoc today also supports a GUI-based collaborative editing
	system.  You can now edit the documentation from the MonoDoc
	Browser and upload your contributions directly to the Mono site.
